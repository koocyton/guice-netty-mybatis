group 'com.doopp.gauss'
version '1.0'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'

buildscript {
    repositories {
        maven {
            // The google mirror is less flaky than mavenCentral()
            url "https://maven-central.storage-download.googleapis.com/repos/central/data/"
        }
    }
    dependencies {
        // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    }
}

repositories {
    maven {
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/"
    }
    mavenLocal()
}

def grpcVersion = '1.14.0'

dependencies {

    // Guice  Netty
    compile 'com.google.inject:guice:4.2.0'
    compile 'com.google.guava:guava:24.0-jre'
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"

    // database
    // compile 'mysql:mysql-connector-java:6.0.6'
    // compile 'com.zaxxer:HikariCP:2.7.7'
    // compile 'org.mybatis:mybatis:3.4.5'
    // compile 'org.mybatis:mybatis-guice:3.10'

    // Redis
    // compile 'redis.clients:jedis:2.9.0'

    // template
    // compile 'org.freemarker:freemarker:2.3.23'

    // JSON
    // compile 'com.google.code.gson:gson:2.8.2'

    compileOnly 'org.projectlombok:lombok:1.16.18'

    // logger
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.slf4j:slf4j-log4j12:1.7.25'
}

// gradle clean generateProto
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1-1'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

// Generate IntelliJ IDEA's .idea & .iml project files
apply plugin: 'idea'

// Provide convenience executables for trying out the examples.
apply plugin: 'application'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

jar {
    manifest {
        attributes(
                "Manifest-Version": 1.0,
                "Main-Class": "com.doopp.gauss.server.KTApplication",
                "Class-Path": "./"
        )
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
task clear(type:Delete){
    delete 'build','target'
}
task release(type:Copy,dependsOn: [clear, jar]) {
}